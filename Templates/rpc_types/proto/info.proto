syntax = "proto3";

package infowriter;

//Сервис для вывода информации разных видов
service InfoSearcher {
	//Унарный(простой) rpc 
	//Клиент отправляет запрос не сервер и ждет ответа
	//Как при обычном вызове функции
	//Принимаем цифру Numeral, возвращаем ее в текстовом виде TextNumeral
	rpc NumeralConverter(Numeral) returns (TextNumeral){}
	
	//Потоковая RPC на стороне сервера
	//клиент отправляет запрос на сервер и получает поток для чтения последовательности сообщений
	//Клиент читает из возвращенного потока до тех пор, пока не останется сообщений
	//Принимаем число и отправляем в ответ все простые числа до него
	rpc SimpleNumbersInRange(Numeral) returns (stream Numeral);
	
	//Потоковая RPC на стороне клиента
	//клиент записывает последовательность сообщений и отправляет их на сервер
	//Как только клиент закончит писать сообщения, он ждет, пока сервер прочитает их все и вернет свой ответ
	//Принимаем поток чисел, определяем количество простых в них
	rpc CalculateSimpleNumber(stream Numeral) returns (Numeral);
	
	//Двунаправленный потоковый RPC
	//обе стороны отправляют последовательность сообщений
	//Два потока работают независимо, поэтому клиенты и серверы могут читать и записывать в любом порядке
	//На сервер передается некоторое количество случайных чисел, возвращается инфо о каждом чисел
	rpc RandomNumberAnalize(stream Numeral) returns(stream NumberInfo);
	
	//Просто чат, потому что могу:))
	rpc Chat(Text) returns (Text);
}

//Описание структур для rpc NumeralConverter
//Numeral - принимаемация цифра для преобразования в текст
message Numeral {
	int32 num = 1;
}
//TextNumeral - преобразованная в текст цифра
message TextNumeral {
	string textnum = 1;
}

//NumberInfo - информация о числе
message NumberInfo{
	int32 numamount = 1;
	bool even = 2;
	repeated int32 numarr = 3;
}

//Для чата, чтобы нормальное имя message
message Text{
	string text = 1;
}
 
